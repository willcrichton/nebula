UTF8={encode:function(a){for(var b,c=-1,d=(a=a.split("")).length,e=String.fromCharCode;++c<d;a[c]=(b=a[c].charCodeAt(0))>=127?e(192|b>>>6)+e(128|b&63):a[c]);return a.join("")},decode:function(a){for(var b,c,d=-1,e=(a=a.split("")).length,f=String.fromCharCode,g="charCodeAt";++d<e;(b=a[d][g](0))&128&&(a[d]=(b&252)==192&&((c=a[d+1][g](0))&192)==128?f(((b&3)<<6)+(c&63)):f(128),a[++d]=""));return a.join("")}};var STATE_OFF=0,STATE_READY=1,STATE_LISTENING=2,STATE_CALCULATING=3;Nebula=function(a,b){if(!window.WebSocket||!window.Worker){alert("Your browser is out of date.");return}this.socket=undefined,this.worker=undefined;this.chunkSize=2040;this.debug=false;var c=this;var d=STATE_OFF;var e=[];this.socket=new WebSocket(a);this.socket.onopen=function(){c.output("Socket: Connection established!")};this.socket.onmessage=function(a){var f=a.data.split(" ");if(f[0]=="CMD"){switch(f[1]){case"create":if(c.worker)break;c.worker=new Worker(b);c.worker.parent=c;c.worker.addEventListener("error",c.handleWorkerError,false);c.worker.addEventListener("message",c.handleWorkerMessage,false);d=STATE_READY;if(c.debug)c.output("Socket: created worker");break;case"newcalc":d=STATE_LISTENING;if(this.debug)c.output("Socket: listening for new calc");break;case"docalc":d=STATE_CALCULATING;c.worker.postMessage({calc:f[2],data:e});e=[];if(c.debug)c.output("Socket: sending data to worker");break;default:output('Socket: Command "'+f[1]+'" is not valid.');break}}else{switch(d){case STATE_LISTENING:e.push(parseInt(a.data));if(c.debug)c.output("Socket: while listening, received "+a.data);break;default:c.output(String(a.data).substring(0,1e3));if($("input[name=continuous]").is(":checked")&&$("#output div").length<26)setTimeout('neb.send("find_primes 10000000");',100);break}}};this.socket.onclose=function(){if(c.debug)c.output("Socket: Connection closing.");if(c.worker)c.worker.terminate()};$(window).unload(function(){if(c.worker)c.worker.terminate()})};Nebula.prototype={sendChunks:function(a){var b=0;a=UTF8.encode(String(a));do{var c=a.substring(b,Math.min(b+this.chunkSize,a.length));console.log("Sending chunk",c);this.socket.send(c);b+=this.chunkSize}while(b<a.length)},handleWorkerMessage:function(a){this.parent.sendChunks("test");setTimeout('neb.sendChunks("end_calc");',10);if(this.parent.debug)this.parent.output("Worker: "+String(a.data).substring(0,10));curState=STATE_READY},handleWorkerError:function(a){this.parent.output(["Worker: ERROR Line ",a.lineno," in ",a.filename,": ",a.message].join(""))},send:function(a){this.socket.send(a);$("input[type=text]").attr("value","")},output:function(a){$("#output").append("<div>"+a+"</div>")}}